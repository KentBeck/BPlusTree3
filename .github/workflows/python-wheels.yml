name: Build Python Wheels

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    - name: Build pure Python wheel
      run: |
        cd python
        python -m pip install --upgrade pip build
        python -m build --wheel

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: python-wheels-${{ matrix.os }}
        path: python/dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build cython

    - name: Build sdist
      run: |
        cd python
        python -m build --sdist

    - name: Upload sdist
      uses: actions/upload-artifact@v4
      with:
        name: python-sdist
        path: python/dist/*.tar.gz

  test_wheels:
    needs: [build_wheels]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download wheels
      uses: actions/download-artifact@v4
      with:
        name: python-wheels-${{ matrix.os }}
        path: python/dist

    - name: Install wheel
      run: |
        python -m pip install --upgrade pip
        pip install --find-links python/dist bplustree
        
    - name: Test installed package
      run: |
        cd /  # Change to root to ensure we're not importing from source
        python -c "import bplustree; tree = bplustree.BPlusTreeMap(); tree[1] = 'test'; print(f'Success: {tree[1]}')"
        python -c "import bplustree; print(f'Implementation: {bplustree.get_implementation()}')"

  publish:
    needs: [test_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/python-v')
    
    steps:
    - name: Download all wheels
      uses: actions/download-artifact@v4
      with:
        path: dist/

    - name: Flatten directory structure
      run: |
        mkdir -p final_dist
        find dist -name "*.whl" -o -name "*.tar.gz" | xargs -I {} cp {} final_dist/
        ls -la final_dist/

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        packages-dir: final_dist/
        skip-existing: true

    - name: Publish to PyPI
      if: success()
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: final_dist/